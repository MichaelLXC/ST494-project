{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "step_loss <- function(x, y, c1) {\n",
    "loss <- var(y[x < c1]) + var(y[x >= c1])\n",
    "return(loss)\n",
    "}\n",
    "step_minimizer <- function(x, y) {\n",
    "c1 <- optim(c(c1 = median(x)), fn = step_loss, x = x, y = y,\n",
    "method = \"Brent\", lower = min(x), upper = max(x))\n",
    "return(c1$par)\n",
    "}\n",
    "step_comparitor <- function(x, y, c1, level) {\n",
    "# Compare the p-value from a t-test to the `level` argument\n",
    "do_split <- t.test(y[x < c1], y[x >= c1])$p.value <= level\n",
    "return(do_split)\n",
    "}\n",
    "find_knots <- function(x, y, level = 0.05, minsize = 10) {\n",
    "# Recursively traverse either side of each knot,\n",
    "# recording all knots as it goes.\n",
    "if (length(x) < minsize) {\n",
    "return(numeric(0)) # Don't split (stop)\n",
    "}\n",
    "c1 <- step_minimizer(x, y)\n",
    "do_first_split <- step_comparitor(x, y, c1, level)\n",
    "if (do_first_split) {\n",
    "left_split <- find_knots(x[x < c1], y[x < c1],\n",
    "level = level)\n",
    "right_split <- find_knots(x[x >= c1], y[x >= c1],\n",
    "level = level)\n",
    "splits <- sort(c(c1, left_split, right_split))\n",
    "return(splits)\n",
    "} else {\n",
    "return(numeric(0)) # Don't split (stop)\n",
    "}\n",
    "}\n",
    "\n",
    "x <- runif(n = 100, 0, 10)\n",
    "knots <- c(2, 6)\n",
    "g <- cut(x, c(-Inf, knots, Inf), labels = FALSE)\n",
    "y <- rnorm(length(x), mean = c(0, 4, 7)[g], sd = 1)\n",
    "estimated_knots <- find_knots(x, y, level = 0.05)\n",
    "print(estimated_knots)\n",
    "plot(x, y)\n",
    "abline(v = estimated_knots)"
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
